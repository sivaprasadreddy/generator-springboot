{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Generator SpringBoot","text":"<p>The Yeoman generator for generating Spring Boot microservices.</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Node 16+</li> <li>JDK 17+</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code>$ npm install -g yo\n$ npm install -g generator-springboot\n</code></pre>"},{"location":"#how-to-use","title":"How to use?","text":"<p>Run the following command and answer the questions:</p> <pre><code>$ yo springboot\n</code></pre>"},{"location":"#features","title":"Features","text":"<p>The generator-springboot generates a Spring Boot application with the following features configured:</p> <ul> <li>Spring Boot project with Maven and Gradle support</li> <li>Spring Data JPA integration with an option to select databases like MySQL, Postgresql, MariaDB.</li> <li>Flyway and Liquibase database migration support.</li> <li>Spring Cloud AWS support with LocalStack configuration.</li> <li>CORS configuration</li> <li>Swagger UI Integration</li> <li>SpringBoot Actuator configuration</li> <li>Testcontainers based Testing and Local dev mode setup</li> <li>DockerCompose configuration for application, ELK, Prometheus, Grafana</li> <li>GitHub Actions Configuration</li> <li>Dockerfile</li> <li>Jenkinsfile</li> <li>SonarQube and JaCoCo based static analysis tools configuration</li> <li>Code formatting using Spotless and google-java-format</li> <li>JUnit 5</li> </ul>"},{"location":"#generate-a-springboot-microservice","title":"Generate a SpringBoot Microservice","text":"<p>After installing the <code>generator-springboot</code>, you can generate a new Spring Boot application as follows:</p> <pre><code>$ yo springboot\nGenerating SpringBoot Application\n? What is the application name? blog\n? What is the default package name? com.sivalabs.blog\n? Which type of database you want to use? Postgresql\n? Which type of database migration tool you want to use? FlywayDB\n? Select the features you want? ELK Docker configuration, Prometheus, Grafana Docker configuration, Localstack Docker configuration\n? Which build tool do you want to use? Maven\n    force blog/.yo-rc.json\n   create blog/mvnw\n   create blog/mvnw.cmd\n   create blog/.gitignore\n   create blog/.mvn/wrapper/maven-wrapper.jar\n   create blog/.mvn/wrapper/maven-wrapper.properties\n   create blog/pom.xml\n   create blog/Dockerfile\n   create blog/Jenkinsfile\n   create blog/lombok.config\n   create blog/sonar-project.properties\n   create blog/README.md\n   create blog/.github/workflows/maven.yml\n   create blog/src/main/resources/db/migration/postgresql/V1__01_init.sql\n   create blog/docker/docker-compose.yml\n   create blog/docker/docker-compose-app.yml\n   create blog/docker/docker-compose-monitoring.yml\n   create blog/config/prometheus/prometheus.yml\n   create blog/config/grafana/provisioning/dashboards/basic-dashboard.json\n   create blog/config/grafana/provisioning/dashboards/dashboard.yml\n   create blog/config/grafana/provisioning/dashboards/jvm-micrometer_rev10.json\n   create blog/config/grafana/provisioning/datasources/datasource.yml\n   create blog/docker/docker-compose-elk.yml\n   create blog/config/elk/logstash.conf\n   create blog/.localstack/01_init.sh\n   create blog/src/main/java/com/sivalabs/blog/Application.java\n   create blog/src/main/java/com/sivalabs/blog/config/WebMvcConfig.java\n   create blog/src/main/java/com/sivalabs/blog/config/SwaggerConfig.java\n   create blog/src/main/java/com/sivalabs/blog/config/ApplicationProperties.java\n   create blog/src/main/java/com/sivalabs/blog/config/Initializer.java\n   create blog/src/main/java/com/sivalabs/blog/config/GlobalExceptionHandler.java\n   create blog/src/main/java/com/sivalabs/blog/config/logging/Loggable.java\n   create blog/src/main/java/com/sivalabs/blog/config/logging/LoggingAspect.java\n   create blog/src/main/java/com/sivalabs/blog/utils/AppConstants.java\n   create blog/src/main/resources/application.properties\n   create blog/src/main/resources/application-local.properties\n   create blog/src/main/resources/logback-spring.xml\n   create blog/src/test/java/com/sivalabs/blog/ApplicationIntegrationTest.java\n   create blog/src/test/java/com/sivalabs/blog/SchemaValidationTest.java\n   create blog/src/test/java/com/sivalabs/blog/common/ContainersConfig.java\n   create blog/src/test/java/com/sivalabs/blog/common/AbstractIntegrationTest.java\n   create blog/src/test/java/com/sivalabs/blog/TestApplication.java\n   create blog/src/test/java/com/sivalabs/blog/SqsListenerIntegrationTest.java\n   create blog/src/test/resources/application-test.properties\n   create blog/src/test/resources/logback-test.xml\n\nNo change to package.json was detected. No package manager install will be executed.\n[INFO] Scanning for projects...\n[INFO]\n[INFO] -----------------------&lt; com.sivalabs.blog:blog &gt;-----------------------\n[INFO] Building blog 0.0.1-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- spotless:2.39.0:apply (default-cli) @ blog ---\n[INFO] Index file does not exist. Fallback to an empty index\n[INFO] Writing clean file: /Users/siva/blog/src/test/java/com/sivalabs/blog/TestApplication.java\n[INFO] Writing clean file: /Users/siva/blog/src/test/java/com/sivalabs/blog/SqsListenerIntegrationTest.java\n[INFO] Writing clean file: /Users/siva/blog/src/test/java/com/sivalabs/blog/SchemaValidationTest.java\n[INFO] Writing clean file: /Users/siva/blog/src/test/java/com/sivalabs/blog/common/AbstractIntegrationTest.java\n[INFO] Writing clean file: /Users/siva/blog/src/test/java/com/sivalabs/blog/common/ContainersConfig.java\n[INFO] Writing clean file: /Users/siva/blog/src/main/java/com/sivalabs/blog/config/GlobalExceptionHandler.java\n[INFO] Writing clean file: /Users/siva/blog/src/main/java/com/sivalabs/blog/config/SwaggerConfig.java\n[INFO] Writing clean file: /Users/siva/blog/src/main/java/com/sivalabs/blog/config/logging/LoggingAspect.java\n[INFO] Spotless.Java is keeping 15 files clean - 8 were changed to be clean, 7 were already clean, 0 were skipped because caching determined they were already clean\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.192 s\n[INFO] Finished at: 2023-08-30T11:30:00+05:30\n[INFO] ------------------------------------------------------------------------\n==========================================\nYour application is generated successfully\n  cd blog\n  &gt; ./mvnw spring-boot:run\n==========================================\n</code></pre>"},{"location":"#generate-rest-api-with-crud-operations","title":"Generate REST API with CRUD operations","text":"<p>You can generate REST API with CRUD operation using the following command:</p> <p>IMPORTANT: You should run the following command from within the generated project folder.</p> <pre><code>$ cd blog\n$ yo springboot:controller Customer --base-path /api/customers\n</code></pre> <p>This sub-generator will generate the following:</p> <ul> <li>JPA entity</li> <li>Spring Data JPA Repository</li> <li>Service</li> <li>Spring MVC REST Controller with CRUD operations</li> <li>Unit and Integration Tests for REST Controller</li> <li>Flyway or Liquibase migration to create table</li> </ul> <pre><code>$ yo springboot:controller Customer --base-path /api/customers\nGenerating JPA entity, repository, service and controller\nEntityName: Customer, basePath: /api/customers\n    force .yo-rc.json\n   create src/main/java/com/sivalabs/blog/entities/Customer.java\n   create src/main/java/com/sivalabs/blog/model/response/PagedResult.java\n   create src/main/java/com/sivalabs/blog/repositories/CustomerRepository.java\n   create src/main/java/com/sivalabs/blog/services/CustomerService.java\n   create src/main/java/com/sivalabs/blog/web/controllers/CustomerController.java\n   create src/test/java/com/sivalabs/blog/web/controllers/CustomerControllerTest.java\n   create src/test/java/com/sivalabs/blog/web/controllers/CustomerControllerIT.java\n   create src/test/java/com/sivalabs/blog/services/CustomerServiceTest.java\n   create src/main/resources/db/migration/postgresql/V2__create_customers_table.sql\n\nNo change to package.json was detected. No package manager install will be executed.\n[INFO] Scanning for projects...\n[INFO]\n[INFO] -----------------------&lt; com.sivalabs.blog:blog &gt;-----------------------\n[INFO] Building blog 0.0.1-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- spotless:2.39.0:apply (default-cli) @ blog ---\n[INFO] Writing clean file: /Users/siva/blog/src/test/java/com/sivalabs/blog/web/controllers/CustomerControllerTest.java\n[INFO] Writing clean file: /Users/siva/blog/src/test/java/com/sivalabs/blog/web/controllers/CustomerControllerIT.java\n[INFO] Writing clean file: /Users/siva/blog/src/test/java/com/sivalabs/blog/services/CustomerServiceTest.java\n[INFO] Writing clean file: /Users/siva/blog/src/main/java/com/sivalabs/blog/web/controllers/CustomerController.java\n[INFO] Writing clean file: /Users/siva/blog/src/main/java/com/sivalabs/blog/model/response/PagedResult.java\n[INFO] Writing clean file: /Users/siva/blog/src/main/java/com/sivalabs/blog/services/CustomerService.java\n[INFO] Writing clean file: /Users/siva/blog/src/main/java/com/sivalabs/blog/entities/Customer.java\n[INFO] Spotless.Java is keeping 23 files clean - 7 were changed to be clean, 1 were already clean, 15 were skipped because caching determined they were already clean\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.190 s\n[INFO] Finished at: 2023-08-30T11:32:50+05:30\n[INFO] ------------------------------------------------------------------------\n</code></pre>"}]}